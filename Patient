import javax.json.*;
import java.io.*;
import java.time.LocalDate;
import java.util.Date;
import java.util.UUID;
import javafx.Application;
import javafx.event.ActionEvent;
import javafx.Scene;
import javafx.scene.control.Button;
import javafx.scene.layouut.StackPane;
import javafx.stage.Stage;

public void start(Stage primaryStage) {
        primaryStage.setTitle("Patient Info");
        
        primaryStage.show();
    }

GridPane grid = new GridPane();
grid.setAlignment(Pos.CENTER);
grid.setHgap(10);
grid.setVgap(10);
grid.setPadding(new Insets(25, 25, 25, 25));

Scene scene = new Scene(grid, 300, 275);
primaryStage.setScene(scene);

scenetitle.setFont(Font.font("Tahoma", FontWeight.NORMAL, 20));
grid.add(scenetitle, 0, 0, 2, 1);

Label userName = new Label("Birthday");
grid.add(Birthday, 0, 1);
TextField BDay = new TextField();
grid.add(BDay, 1, 1);

Label userName = new Label("Height");
grid.add(Height, 0, 2);
TextField H1 = new TextField();
grid.add(H1, 1, 2);

Label userName = new Label("Temperature");
grid.add(Temperature, 0, 3);
TextField temp = new TextField();
grid.add(temp, 1, 3);

Label userName = new Label("Weight");
grid.add(Weight, 0, 4);
TextField W = new TextField();
grid.add(W, 1, 4);

Label userName = new Label("Bloodpressure");
grid.add(Bloodpressure, 0, 5);
TextField BP = new TextField();
grid.add(BP, 1, 5);


public class Patient extends User {
    protected Date birthday;
    protected double height;
    protected double temperature;
    protected double weight;
    protected double bloodPressure;

    protected Patient() {}

    public Date getBirthday() {
        return birthday;
    }

    public double getHeight() {
        return height;
    }

    public double getTemperature() {
        return temperature;
    }

    public double getWeight() {
        return weight;
    }

    public double getBloodPressure() {
        return bloodPressure;
    }

    public void setBirthday(Date birthday) {
        this.birthday = birthday;
    }

    public void setHeight(double height) {
        this.height = height;
    }

    public void setTemperature(double temperature) {
        this.temperature = temperature;
    }

    public void setWeight(double weight) {
        this.weight = weight;
    }

    public void setBloodPressure(double bloodPressure) {
        this.bloodPressure = bloodPressure;
    }

    public static void WriteToFile(Patient patient, String fileName) throws IOException {
        JsonObjectBuilder objectBuilder = Json.createObjectBuilder();
        objectBuilder.add("ID", patient.id.toString());
        objectBuilder.add("First Name", patient.firstName);
        objectBuilder.add("Last Name", patient.lastName);
        objectBuilder.add("Date of Birth", patient.birthday.toString());
        objectBuilder.add("Height", patient.height);
        objectBuilder.add("Temperature", patient.temperature);
        objectBuilder.add("Weight", patient.weight);
        objectBuilder.add("Blood Pressure", patient.bloodPressure);

        JsonWriter writer = Json.createWriter(new FileOutputStream(new File(fileName)));
        writer.write(objectBuilder.build());
    }

    public static Patient LoadFromFile(String fileName) throws IOException {
        JsonReader reader = Json.createReader(new FileInputStream(new File(fileName)));
        JsonObject object = reader.readObject();

        Patient patient = new Patient();
        patient.id = UUID.fromString(object.getString("ID"));
        patient.firstName = object.getString("First Name");
        patient.lastName = object.getString("Last Name");
        LocalDate date = LocalDate.parse(object.getString("Date of Birth"));

        return patient;
    }
}
